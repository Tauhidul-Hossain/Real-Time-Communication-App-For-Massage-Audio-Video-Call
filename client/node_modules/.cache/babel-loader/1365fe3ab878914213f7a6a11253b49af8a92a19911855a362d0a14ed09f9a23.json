{"ast":null,"code":"var _jsxFileName = \"D:\\\\convove\\\\client\\\\src\\\\components\\\\CelebrityList.tsx\",\n  _s = $RefreshSig$();\n// src/components/CelebrityList.tsx\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CelebrityList = () => {\n  _s();\n  const [celebrities, setCelebrities] = useState([]);\n  useEffect(() => {\n    const fetchCelebrities = async () => {\n      try {\n        const response = await axios.get('/api/celebrities');\n        setCelebrities(response.data);\n      } catch (error) {\n        console.error('Error fetching celebrities:', error);\n      }\n    };\n    fetchCelebrities();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Celebrity Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: celebrities.map(celebrity => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: celebrity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: celebrity.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: celebrity.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: celebrity.profileImage,\n          alt: celebrity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, celebrity._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CelebrityList, \"+wnl0sj+EmGr2dG/kp+ysrftozk=\");\n_c = CelebrityList;\nexport default CelebrityList;\nvar _c;\n$RefreshReg$(_c, \"CelebrityList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CelebrityList","_s","celebrities","setCelebrities","fetchCelebrities","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","celebrity","name","category","bio","src","profileImage","alt","_id","_c","$RefreshReg$"],"sources":["D:/convove/client/src/components/CelebrityList.tsx"],"sourcesContent":["// src/components/CelebrityList.tsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\ninterface Celebrity {\r\n  _id?: string; // Optional if not needed here\r\n  name: string;\r\n  category: string;\r\n  bio: string;\r\n  description: string;\r\n  profileImage: string;\r\n  rating: number;\r\n  reviews: any[];\r\n}\r\nconst CelebrityList: React.FC = () => {\r\n    const [celebrities, setCelebrities] = useState<Celebrity[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCelebrities = async () => {\r\n            try {\r\n                const response = await axios.get<Celebrity[]>('/api/celebrities');\r\n                setCelebrities(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching celebrities:', error);\r\n            }\r\n        };\r\n\r\n        fetchCelebrities();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Celebrity Profiles</h1>\r\n            <ul>\r\n                {celebrities.map((celebrity) => (\r\n                    <li key={celebrity._id}>\r\n                        <h2>{celebrity.name}</h2>\r\n                        <p>{celebrity.category}</p>\r\n                        <p>{celebrity.bio}</p>\r\n                        <img src={celebrity.profileImage} alt={celebrity.name} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CelebrityList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAc,EAAE,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACZ,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAc,kBAAkB,CAAC;QACjEH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bf,OAAA;MAAAW,QAAA,EACKR,WAAW,CAACa,GAAG,CAAEC,SAAS,iBACvBjB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAKM,SAAS,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBf,OAAA;UAAAW,QAAA,EAAIM,SAAS,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3Bf,OAAA;UAAAW,QAAA,EAAIM,SAAS,CAACG;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBf,OAAA;UAAKqB,GAAG,EAAEJ,SAAS,CAACK,YAAa;UAACC,GAAG,EAAEN,SAAS,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAJpDE,SAAS,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CA/BID,aAAuB;AAAAwB,EAAA,GAAvBxB,aAAuB;AAiC7B,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}